#+HUGO_BASE_DIR: ../../
#+HUGO_SECTION: ./posts
#+HUGO_DRAFT: true

#+HUGO_WEIGHT: auto
#+HUGO_AUTO_SET_LASTMOD: t
#+HUGO_TAGS: tinode golang chat "instant messaging"

#+TITLE: tinode series.001 - repository 살펴보기
#+LAYOUT: post
#+AUTHOR: yeongcheon
#+DATE: "2019-03-07 19:00:00 +0900"

* 인스턴스 메시징?
  요즘에는 어느 서비스를 이용하든 대부분 실시간 채팅은 기본으로 지원한다. 페이스북, 트위터같은 서비스는 물론이고 트위치, 유튜브 같은 동영상 기반 플랫폼도 실시간 채팅을 기본적으로 지원한다. 사실 과거에 2G폰에서 문자메세지를 주고받던 시절부터 현재 카카오톡, 텔레그램같은 실시간 인스턴트 메세징 앱에 이르기까지 플랫폼의 변화만 있을 뿐 글자를 이용한 실시간 의사소통은 현대인에게 상당히 익숙한 의사소통 방법이다.

* 우리 서비스에 적용하고 싶어(어떻게?)
  운영중인 서비스에 인스턴스 메시징 기능을 적용하면 여러가지 이점이 많다. 빠른 의사소통은 물론 사용자의 서비스 체류시간 및 접속빈도 증가 등등.. 적용을 안할 이유가 없다. 그렇다면 현재 운영, 또는 개발중인 서비스에 적용하기 위한 방법에는 어떤 것들이 있을까? 내가 떠올린 방법은 크게 세 가지다.

  * 직접 구현하기

	제일 쉽게 떠올릴 수 있는 방법이다. 밑바닥부터 자신이 직접 설계, 구현하는 것(+git init+). 의욕 충만한 개발자라면 일단 달려들고 보겠지만 일단 진정하자. 카카오톡이나 기타 다른 메신저와 같은 메시징 시스템을 직접 구현하는건 생각보다 만만한 작업이 아니다. 실제 서비스에 사용될 프로덕션 레벨 수준까지 구현하려면 짧게는 수개월, 길게는 년 단위로 넘어가는 프로젝트가 될 것이다(+사실 내가 능력이 안된다+).

  * 솔루션 구매

	제일 쉬운 방법은 역시 돈으로 떼우는 것이다(...). 이것저것 찾아보니 [[https://www.twilio.com][twilio]]와 [[https://sendbird.com/][sendbird]]라는 유명한 솔루션 회사가 있었다. 이 중 sendbird 한국 회사로 최근에 꽤 큰 규모로 [[https://estimastory.com/2019/02/20/sendbird/][투자도 받았다고 한다.]] 아무튼 이 회사들이 제공하는 솔루션을 적용하면 큰 힘 들이지 않고 간단히 SDK 적용만으로 채팅 기능을 구현할 수 있다고 한다. 자금사정이 넉넉하다면 이런 유료 솔루션을 이용하는것도 시간을 절약하는 좋은 방법이다. 역시 자본의 힘은 대단하다.

  * 오픈소스 적용

	직접 구현할 시간(또는 능력)이 없고 솔루션을 구매할 돈도 없다면 오픈소스를 사용해보자. 비용도 거의 들지 않고 커뮤니티가 많이 활성화 되어있는 경우엔 관련된 많은 자료를 얻을수도 있다. [[https://github.com][github]]에서 =chat= 또는 =chatting= 을 검색해보면 다양한 오픈소스가 존재한다. *이 중에서 내가 선택한 오픈소스는 [[https://github.com/tinode][Tinode]]프로젝트다.*

* 왜 하필 Tinode?
